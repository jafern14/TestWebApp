@charset "UTF-8";
html {
  box-sizing: border-box;
}

*, *::after, *::before {
  box-sizing: inherit;
}

header.navigation {
  background-color: #333;
  border-bottom: 1px solid #1a1a1a;
  min-height: 60px;
  width: 100%;
  z-index: 999;
}

header.navigation .navigation-wrapper {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  z-index: 9999;
}

header.navigation .navigation-wrapper::after {
  clear: both;
  content: "";
  display: table;
}

header.navigation .navigation-wrapper::after {
  clear: both;
  content: "";
  display: table;
}

header.navigation .logo {
  float: left;
  max-height: 60px;
  padding-left: 1em;
  padding-right: 2em;
}

header.navigation .logo img {
  max-height: 60px;
  padding: 0.8em 0;
}

header.navigation .navigation-menu-button {
  color: rgba(255, 255, 255, 0.7);
  display: block;
  float: right;
  line-height: 60px;
  margin: 0;
  padding-right: 1em;
  text-decoration: none;
  text-transform: uppercase;
}

@media screen and (min-width: 53.75em) {
  header.navigation .navigation-menu-button {
    display: none;
  }
}

header.navigation .navigation-menu-button:focus, header.navigation .navigation-menu-button:hover {
  color: white;
}

header.navigation nav {
  float: none;
  min-height: 60px;
  z-index: 9999999;
}

@media screen and (min-width: 53.75em) {
  header.navigation nav {
    float: left;
  }
}

header.navigation ul.navigation-menu {
  clear: both;
  display: none;
  margin: 0 auto;
  overflow: visible;
  padding: 0;
  width: 100%;
  z-index: 9999;
}

header.navigation ul.navigation-menu.show {
  display: block;
}

@media screen and (min-width: 53.75em) {
  header.navigation ul.navigation-menu {
    display: inline;
    margin: 0;
    padding: 0;
  }
}

header.navigation ul li.nav-link {
  background: #333;
  display: block;
  line-height: 60px;
  overflow: hidden;
  padding-right: 0.8em;
  text-align: right;
  width: 100%;
  z-index: 9999;
}

@media screen and (min-width: 53.75em) {
  header.navigation ul li.nav-link {
    background: transparent;
    display: inline;
    line-height: 60px;
    text-decoration: none;
    width: auto;
  }
}

header.navigation ul li.nav-link a {
  color: rgba(255, 255, 255, 0.7);
  display: inline-block;
  text-decoration: none;
}

@media screen and (min-width: 53.75em) {
  header.navigation ul li.nav-link a {
    padding-right: 1em;
  }
}

header.navigation ul li.nav-link a:focus, header.navigation ul li.nav-link a:hover {
  color: white;
}

header.navigation .active-nav-item a {
  border-bottom: 1px solid rgba(255, 255, 255, 0.5);
  padding-bottom: 3px;
}

header.navigation li.more.nav-link {
  padding-right: 0;
}

@media screen and (min-width: 53.75em) {
  header.navigation li.more.nav-link {
    padding-right: 1em;
  }
}

header.navigation li.more.nav-link > ul > li:first-child a {
  padding-top: 1em;
}

header.navigation li.more.nav-link a {
  margin-right: 1em;
}

header.navigation li.more.nav-link > a {
  padding-right: 0.6em;
}

header.navigation li.more.nav-link > a:after {
  position: absolute;
  top: auto;
  right: -0.4em;
  bottom: auto;
  left: auto;
  content: '\25BE';
  color: rgba(255, 255, 255, 0.7);
}

header.navigation li.more {
  overflow: visible;
  padding-right: 0;
}

header.navigation li.more a {
  padding-right: 0.8em;
}

header.navigation li.more > a {
  padding-right: 1.6em;
  position: relative;
}

@media screen and (min-width: 53.75em) {
  header.navigation li.more > a {
    margin-right: 1em;
  }
}

header.navigation li.more > a:after {
  content: 'â€º';
  font-size: 1.2em;
  position: absolute;
  right: 0.5em;
}

header.navigation li.more:focus > .submenu,
header.navigation li.more:hover > .submenu {
  display: block;
}

@media screen and (min-width: 53.75em) {
  header.navigation li.more {
    padding-right: 0.8em;
    position: relative;
  }
}

header.navigation ul.submenu {
  display: none;
  padding-left: 0;
}

@media screen and (min-width: 53.75em) {
  header.navigation ul.submenu {
    left: -1em;
    position: absolute;
    top: 1.5em;
  }
}

@media screen and (min-width: 53.75em) {
  header.navigation ul.submenu .submenu {
    left: 11.8em;
    top: 0;
  }
}

header.navigation ul.submenu li {
  display: block;
  padding-right: 0;
}

@media screen and (min-width: 53.75em) {
  header.navigation ul.submenu li {
    line-height: 46.1538461538px;
  }
  header.navigation ul.submenu li:first-child > a {
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
  }
  header.navigation ul.submenu li:last-child > a {
    border-bottom-left-radius: 3px;
    border-bottom-right-radius: 3px;
    padding-bottom: 0.7em;
  }
}

header.navigation ul.submenu li a {
  background-color: #2b2b2b;
  display: inline-block;
  text-align: right;
  width: 100%;
}

@media screen and (min-width: 53.75em) {
  header.navigation ul.submenu li a {
    background-color: #333;
    padding-left: 1em;
    text-align: left;
    width: 12em;
  }
}

header.navigation .navigation-tools {
  background: #505050;
  clear: both;
  display: block;
  height: 60px;
}

@media screen and (min-width: 53.75em) {
  header.navigation .navigation-tools {
    background: transparent;
    clear: none;
    float: right;
  }
}

header.navigation .search-bar {
  float: left;
  padding: 0.85em 0.85em 0.7em 0.6em;
  width: 60%;
}

header.navigation .search-bar form {
  position: relative;
}

header.navigation .search-bar form input[type=search] {
  box-sizing: border-box;
  background: #404040;
  border-radius: 6px;
  border: 1px solid #262626;
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.9em;
  font-style: italic;
  margin: 0;
  padding: 0.5em 0.8em;
  width: 100%;
}

@media screen and (min-width: 53.75em) {
  header.navigation .search-bar form input[type=search] {
    width: 100%;
  }
}

header.navigation .search-bar form button[type=submit] {
  background: #404040;
  border: none;
  bottom: 0.3em;
  left: auto;
  outline: none;
  padding: 0 9px;
  position: absolute;
  right: 0.3em;
  top: 0.3em;
}

header.navigation .search-bar form button[type=submit] img {
  height: 12px;
  opacity: 0.7;
  padding: 1px;
}

@media screen and (min-width: 53.75em) {
  header.navigation .search-bar {
    display: inline-block;
    position: relative;
    width: 16em;
  }
  header.navigation .search-bar input {
    box-sizing: border-box;
    display: block;
  }
}

body {
  background: #fafafa;
  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
  color: #333;
}

.hero-unit {
  margin: 50px auto 0 auto;
  width: 300px;
  font-size: 18px;
  font-weight: 200;
  line-height: 30px;
  background-color: #eee;
  border-radius: 6px;
  padding: 60px;
}

.hero-unit h1 {
  font-size: 60px;
  line-height: 1;
  letter-spacing: -1px;
}

.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

#main {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
}

#main::after {
  clear: both;
  content: "";
  display: table;
}

#top-row {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 100%;
}

#top-row:last-child {
  margin-right: 0;
}

#middle-row {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 100%;
}

#middle-row:last-child {
  margin-right: 0;
}

#bottom-row {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 100%;
}

#bottom-row:last-child {
  margin-right: 0;
}

#red {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 31.7615656014%;
}

#red:last-child {
  margin-right: 0;
}

#orange {
  background-color: orange;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 31.7615656014%;
}

#orange:last-child {
  margin-right: 0;
}

#yellow {
  background-color: yellow;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 31.7615656014%;
}

#yellow:last-child {
  margin-right: 0;
}

#green {
  background-color: green;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 31.7615656014%;
}

#green:last-child {
  margin-right: 0;
}

#blue {
  background-color: blue;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 65.8807828007%;
}

#blue:last-child {
  margin-right: 0;
}

#indigo {
  background-color: indigo;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 31.7615656014%;
  margin-left: 68.2384343986%;
}

#indigo:last-child {
  margin-right: 0;
}

@media screen and (max-width: 768px) {
  #red, #orange, #yellow {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 100%;
  }
  #red:last-child, #orange:last-child, #yellow:last-child {
    margin-right: 0;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
